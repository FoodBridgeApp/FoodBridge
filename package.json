// server/logger.js (ESM)
// Minimal JSON logger + request middleware.

import { randomUUID } from "node:crypto";

export function log(msg, extra = {}) {
  const rec = { level: "info", msg, ...extra };
  try {
    console.log(JSON.stringify(rec));
  } catch {
    console.log(`{"level":"info","msg":"${msg}"}`);
  }
}

export function requestLogger() {
  return (req, res, next) => {
    // attach req.id
    req.id = randomUUID();

    // health checks are noisyâ€”skip start logs for them
    if (!(req.method === "GET" && req.path === "/api/health")) {
      log("req_start", {
        reqId: req.id,
        method: req.method,
        path: req.path,
        ip: req.ip,
        ua: req.headers["user-agent"],
      });
    }

    const started = Date.now();
    res.on("finish", () => {
      const ms = Date.now() - started;
      // also skip finish logs for health checks
      if (req.method === "GET" && req.path === "/api/health") return;
      log("req_done", {
        reqId: req.id,
        method: req.method,
        path: req.path,
        ip: req.ip,
        ua: req.headers["user-agent"],
        status: res.statusCode,
        ms,
      });
    });

    next();
  };
}
